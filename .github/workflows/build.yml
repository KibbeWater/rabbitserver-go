# This workflow will build a golang project with appropriate file extensions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    # Set the output filename based on the OS
    - name: Set output file name
      id: vars
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo "OUTPUT_FILE=bin/server.exe" >> $GITHUB_ENV
        else
          echo "OUTPUT_FILE=bin/server" >> $GITHUB_ENV
        fi

    - name: Build
      run: go build -o ${{ env.OUTPUT_FILE }} main.go

    # Convert runner.os and runner.arch to lowercase for the artifact name
    - name: Upload Build
      run: |
        os_lower=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
        arch_lower=$(echo "${{ runner.arch }}" | tr '[:upper:]' '[:lower:]')
        artifact_name="server-${os_lower}-${arch_lower}"
        echo "Artifact Name: $artifact_name"
        echo "artifact_name=$artifact_name" >> $GITHUB_ENV

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.OUTPUT_FILE }}
